{"ast":null,"code":"/*==================================================\nsrc/App.js\n\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/import React,{Component}from'react';import{BrowserRouter as Router,Route}from'react-router-dom';// Import other components\nimport Home from'./components/Home';import UserProfile from'./components/UserProfile';import LogIn from'./components/Login';import Credits from'./components/Credits';import Debits from'./components/Debits';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";class App extends Component{constructor(){// Create and initialize state\nsuper();this.updateAccountBalance=()=>{const{credits,debits}=this.state;const totalCredits=credits.reduce((acc,credit)=>acc+credit.amount,0);const totalDebits=debits.reduce((acc,debit)=>acc+debit.account,0);this.setState({accountBalance:totalCredits-totalDebits});};this.addCredit=newCredit=>{const updatedCredits=[...this.state.credits,newCredit];const updatedBalance=parseFloat(this.state.accountBalance)+parseFloat(newCredit.amount);this.setState({credits:updatedCredits,accountBalance:updatedBalance});};this.addDebit=newDebit=>{const updatedDebits=[...this.state.debits,newDebit];const updatedBalance=parseFloat(this.state.accountBalance)-parseFloat(newDebit.amount);this.setState({debits:updatedDebits,accountBalance:updatedBalance});};this.mockLogIn=logInInfo=>{const newUser={...this.state.currentUser};newUser.userName=logInInfo.userName;this.setState({currentUser:newUser});};this.state={accountBalance:1234567.89,creditList:[],debitList:[],currentUser:{userName:'Joe Smith',memberSince:'11/22/99'}};}async componentDidMount(){try{const creditsResponse=await fetch('https://johnnylaicode.github.io/api/credits.json');const creditsData=await debitsResponse.json();const debitsResponse=await fetch('https://johnnylaicode.github.io/api/debits.json');const debitsData=await debitsResponse.json();this.setState({credits:creditsData,debits:debitsData});}catch(err){console.error('Error fetching data:',err);}}// Update state's currentUser (userName) after \"Log In\" button is clicked\n// Create Routes and React elements to be rendered using React components\nrender(){// Create React elements and pass input props to components\nconst HomeComponent=()=>/*#__PURE__*/_jsx(Home,{accountBalance:this.state.accountBalance});const UserProfileComponent=()=>/*#__PURE__*/_jsx(UserProfile,{userName:this.state.currentUser.userName,memberSince:this.state.currentUser.memberSince});const LogInComponent=()=>/*#__PURE__*/_jsx(LogIn,{user:this.state.currentUser,mockLogIn:this.mockLogIn});const CreditsComponent=()=>/*#__PURE__*/_jsx(Credits,{credits:this.state.creditList,addCredit:this.addCredit,accountBalance:this.state.accountBalance});const DebitsComponent=()=>/*#__PURE__*/_jsx(Debits,{debits:this.state.debitList,addDebit:this.addDebit,accountBalance:this.state.accountBalance});// Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\nreturn/*#__PURE__*/_jsx(Router,{basename:\"/bank-of-react-starter-code\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",render:HomeComponent}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/userProfile\",render:UserProfileComponent}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/login\",render:LogInComponent}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/credits\",render:CreditsComponent}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/debits\",render:DebitsComponent})]})});}}export default App;","map":{"version":3,"names":["React","Component","BrowserRouter","Router","Route","Home","UserProfile","LogIn","Credits","Debits","jsx","_jsx","jsxs","_jsxs","App","constructor","updateAccountBalance","credits","debits","state","totalCredits","reduce","acc","credit","amount","totalDebits","debit","account","setState","accountBalance","addCredit","newCredit","updatedCredits","updatedBalance","parseFloat","addDebit","newDebit","updatedDebits","mockLogIn","logInInfo","newUser","currentUser","userName","creditList","debitList","memberSince","componentDidMount","creditsResponse","fetch","creditsData","debitsResponse","json","debitsData","err","console","error","render","HomeComponent","UserProfileComponent","LogInComponent","user","CreditsComponent","DebitsComponent","basename","children","exact","path"],"sources":["/Users/abdullasaleh/Bank-of-React/src/App.js"],"sourcesContent":["/*==================================================\nsrc/App.js\n\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\n// Import other components\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\n\nclass App extends Component {\n  constructor() {  // Create and initialize state\n    super(); \n    this.state = {\n      accountBalance: 1234567.89,\n      creditList: [],\n      debitList: [],\n      currentUser: {\n        userName: 'Joe Smith',\n        memberSince: '11/22/99',\n      }\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const creditsResponse = await fetch('https://johnnylaicode.github.io/api/credits.json');\n      const creditsData = await debitsResponse.json();\n\n      const debitsResponse = await fetch('https://johnnylaicode.github.io/api/debits.json');\n      const debitsData = await debitsResponse.json();\n\n      this.setState({\n        credits: creditsData,\n        debits: debitsData,\n      });\n    } catch (err) {\n      console.error('Error fetching data:', err);\n    }\n  }\n\n  updateAccountBalance = () => {\n    const { credits, debits } = this.state;\n    const totalCredits = credits.reduce((acc, credit) => acc + credit.amount, 0);\n    const totalDebits = debits.reduce((acc, debit) => acc + debit.account, 0);\n\n    this.setState({ accountBalance: totalCredits - totalDebits });\n  }\n\n  addCredit = (newCredit) => {\n    const updatedCredits = [...this.state.credits, newCredit];\n    const updatedBalance = parseFloat(this.state.accountBalance) + parseFloat(newCredit.amount);\n\n    this.setState(\n      { credits: updatedCredits, accountBalance: updatedBalance }\n    );\n  }\n\n  addDebit = (newDebit) => {\n    const updatedDebits = [...this.state.debits, newDebit];\n    const updatedBalance = parseFloat(this.state.accountBalance) - parseFloat(newDebit.amount);\n\n    this.setState(\n      { debits: updatedDebits, accountBalance: updatedBalance}\n    );\n  }\n\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\n  mockLogIn = (logInInfo) => {  \n    const newUser = {...this.state.currentUser};\n    newUser.userName = logInInfo.userName;\n    this.setState({currentUser: newUser})\n  }\n\n  // Create Routes and React elements to be rendered using React components\n  render() {  \n    // Create React elements and pass input props to components\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />)\n    const UserProfileComponent = () => (\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\n    )\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\n    const CreditsComponent = () => (<Credits credits={this.state.creditList} addCredit={this.addCredit} accountBalance={this.state.accountBalance} />) \n    const DebitsComponent = () => (<Debits debits={this.state.debitList} addDebit={this.addDebit} accountBalance={this.state.accountBalance} />) \n\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\n    return (\n      <Router basename=\"/bank-of-react-starter-code\">\n        <div>\n          <Route exact path=\"/\" render={HomeComponent}/>\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\n          <Route exact path=\"/login\" render={LogInComponent}/>\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}